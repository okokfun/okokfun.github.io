<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My Blog</title>
    <link>https://okokfun.github.io/post/</link>
    <description>Recent content in Posts on My Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 11 Jul 2023 13:55:45 +0800</lastBuildDate><atom:link href="https://okokfun.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>适用于Keil的插件合集</title>
      <link>https://okokfun.github.io/post/keil%E6%8F%92%E4%BB%B6%E5%90%88%E9%9B%86/</link>
      <pubDate>Tue, 11 Jul 2023 13:55:45 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/keil%E6%8F%92%E4%BB%B6%E5%90%88%E9%9B%86/</guid>
      <description>文件下载链接 https://github.com/txt1994/keil_plugs 本人收集的Keil插件，当然也可用于其他软件
1.AStyle 下载链接:
https://sourceforge.net/projects/astyle/files 1.1 AStyle可以对代码进行格式化分别是对单个文件格式化，命令： -n !E --style=google -s4 对多个文件格式化，但需要在同一个文件夹，命令：
-n &amp;#34;$E*.c&amp;#34; &amp;#34;$E*.h&amp;#34; --style=google -p -s4 -S -f -xW -w -xw -R 2.FileComments 2.1 FileComments可以对*.h和*.c进行快速添加注释，但需要模版文件，此文件在最下面提供下载，命令： !E 3.DateTime 3.1 DateTime可以识别当前日期和时间，用的不多，命令： 当前日期：
!E ~E ^E 当前时间：
!E ~E ^E T 4.FunctionComment 4.1 FunctionComment可以提供函数快速添加注释，命令： !E ~E 把这些插件添加到keil中，打开keil，依次点击Tools-&amp;gt;Customize Tools Menu,此时页面是这样的： 把上述的插件添加进去，Command是插件路径，Arguments是使用插件时的参数，可以根据需要自行定制
添加插件的快捷键：点击keil页面的小扳手，找到Shortcut Keys,把下拉框拉到刚才添加的插件处，右边是添加快键键的地方，添加后可以使用了</description>
    </item>
    
    <item>
      <title>本人使用的hexo插件列表</title>
      <link>https://okokfun.github.io/post/%E6%9C%AC%E4%BA%BA%E4%BD%BF%E7%94%A8%E7%9A%84hexo%E6%8F%92%E4%BB%B6%E5%88%97%E8%A1%A8/</link>
      <pubDate>Fri, 28 Jan 2022 14:14:03 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/%E6%9C%AC%E4%BA%BA%E4%BD%BF%E7%94%A8%E7%9A%84hexo%E6%8F%92%E4%BB%B6%E5%88%97%E8%A1%A8/</guid>
      <description>文章emoji支持
npm install hexo-filter-github-emojis --save 文章加密访问插件
npm install hexo-blog-encrypt --save 使用方法
将 &amp;ldquo;password&amp;rdquo; 字段添加到您文章信息头就像这样. --- title: Hello World tags: - 作为日记加密 date: 2016-03-30 21:12:21 password: mikemessi abstract: 有东西被加密了, 请输入密码查看. message: 您好, 这里需要密码. wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试. wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容. --- password下边几行可加可不加。
编辑_config.yml 加入下列几行
# Security encrypt: # hexo-blog-encrypt abstract: 有东西被加密了, 请输入密码查看. message: 您好, 这里需要密码, 请点击本文字. tags: - {name: tagName, password: 密码A} - {name: tagName, password: 密码B} wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</description>
    </item>
    
    <item>
      <title>Me</title>
      <link>https://okokfun.github.io/post/me/</link>
      <pubDate>Mon, 24 Jan 2022 13:37:38 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/me/</guid>
      <description>安乐死是对人最后的仁慈，让人可以有尊严和最后无痛苦的离开这个世界，当然前提是有病痛且无法医治，比如物理学家霍金的 肌萎缩性脊髓侧索硬化症（ALS）。</description>
    </item>
    
    <item>
      <title>Oracle数据库介绍</title>
      <link>https://okokfun.github.io/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 09 Jan 2022 16:51:29 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D/</guid>
      <description>数据库介绍 什么是数据库?
​	数据库是为了实现一定的目的按某种规则组织起来的数据的集合, 简单的说,数据库就是存储数据的库.
​	举个例子来说明这个问题：每个人都有很多亲戚和朋友，为了保持与他们的联系，
​	我们常常用一个笔记本将他们的姓名、地址、电话等信息都记录下来，
​	这样要査谁的电话或地址就很方便了。
​	这个“通讯录”就是一个最简单的“数据库”，每个人的姓名、地址、电话等信息就是这个数据库中的“数据”。
​	我们可以在笔记本这个“数据库”中添加新朋友的个人信息，也可以由于某个朋友的电话变动而修改他的电话号码这个“数据”。
​	不过说到底，我们使用笔记本这个“数据库”还是为了能随时査到某位亲戚或朋友的地址、邮编或电话号码这些“数据”。
数据库是干什么用的?
存储和管理数据,便于程序开发.
oracle简介:
Oracle是殷墟（yīn Xu）出土的甲骨文（oracle bone inscriptions）的英文翻译的第一个单词。
Oracle公司成立与1977年，总部位于美国加州；
Oracle数据库是Oracle（中文名称叫甲骨文）公司的核心产品，Oracle数据库是一个适合于大中型企业的数据库管理系统。在所有的数据库管理系统中（比如：微软的SQL Server，IBM的DB2等），Oracle的主要用户涉及面非常广, 包括: 银行、电信、移动通信、航空、保险、金融、电子商务和跨国公司等。
Oracle数据库的一些版本有：Oracle7、Oracle8i、Oracle9i，Oracle10g到Oracle11g，Oracle12c， 各个版本之间的操作存在一定的差别，但是操作oracle数据库都使用的是标准的SQL语句，因此对于各个版本的差别不大。
2008年1月16日 收购bea，目的是为了得到weblogic（web服务器的框架，免费的对应的tomcat）。
2008年1月16日 sun公司收购了mysql 。
2009年4月20日 oracle收购了sun 。
常见的数据库有哪些？
oracle公司的oracle数据库
IBM公司的DB2数据库
Informix公司的Informix数据库
sysbase公司的sysbase数据库
Microsoft公司的SQL Server
oracle的MySQL数据库（开始属于mysql公司，后来mysql被sun收购，sun又被oracle收购）
MongoDB数据库
Mariadb数据库 (由MySQL的创始人Michael Widenius（英语：Michael Widenius）主导开发,MariaDB名称来自Michael Widenius的女儿Maria的名字)
SQLite (设计目标是嵌入式)
1 Oracle的体系结构 Oracle服务器：是一个数据管理系统(RDBMS)，它提供开放的, 全面的, 近乎完整的信息管理。由1个数据库和一个（或多个）实例组成。数据库位于硬盘上，实例位于内存中。
1.1 表空间和数据文件 逻辑概念：表空间是由数据文件组成，位于实例上，在内存中。
物理概念：数据文件，在磁盘上（/home/oracle_11/app/oradata/orcl目录中的.DBF文件）；
​ 一个表空间包含一个或者多个数据文件。
1.2 段、区、块 段存在于表空间中，段是区的集合，区是数据块的集合，数据块会被映射到磁盘块。</description>
    </item>
    
    <item>
      <title>nginx安装</title>
      <link>https://okokfun.github.io/post/nginx%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sat, 08 Jan 2022 16:07:29 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/nginx%E5%AE%89%E8%A3%85/</guid>
      <description>1. 一些基本概念 ###1.1 Nginx初步认识
Nginx介绍
engine x
俄罗斯
开源的框架
c语言
Tengine - 淘宝基于nginx修改的
Nginx能干什么?
作为web服务器 解析http协议 反向代理服务器 了解反向代理的概念 邮件服务器 解析邮件相关的协议: pop3/smtp/imap Nginx的优势?
更快
高峰期(数以万计的并发时)nginx可以比其它web服务器更快的响应请求 高扩展
低耦合设计的模块组成,丰富的第三方模块支持 高可靠
经过大批网站检验 www.sina.com.cn www.xunlei.com www.163.com 每个worker进程相对独立, 出错之后可以快速开启新的worker worker进程的个数是可以控制的 在后台干活的进程 低内存消耗
一般情况下,10000个非活跃的HTTP Keep-Alive连接在nginx中仅消耗 2.5M内存 单机支持10万以上的并发连接
取决于内存,10万远未封顶 热部署
master和worker的分离设计,可实现7x24小时不间断服务的前提下升级nginx可执行文件 最自由的BSD许可协议
BSD许可协议允许用户免费使用nginx, 修改nginx源码,然后再发布 淘宝: tengine 1.2 正向/反向代理 正向代理
正向代理是位于客户端和原始服务器之间的服务器，为了能够从原始服务器获取请求的内容，客户端需要将请求发送给代理服务器，然后再由代理服务器将请求转发给原始服务器，原始服务器接受到代理服务器的请求并处理，然后将处理好的数据转发给代理服务器，之后再由代理服务器转发发给客户端，完成整个请求过程。
正向代理的典型用途就是为在防火墙内的局域网客户端提供访问Internet的途径, 比如:
学校的局域网
单位局域网访问外部资源
正向代理服务器是为用户服务的
反向代理
反向代理方式是指代理原始服务器来接受来自Internet的链接请求，然后将请求转发给内部网络上的原始服务器，并将从原始服务器上得到的结果转发给Internet上请求数据的客户端。那么顾名思义，反向代理就是位于Internet和原始服务器之间的服务器，对于客户端来说就表现为一台服务器，客户端所发送的请求都是直接发送给反向代理服务器，然后由反向代理服务器统一调配。
客户端给服务器发送请求, 连接服务器, 用户不知道服务器地址, 只有反向代理服务器的地址是公开的
请求直接发给反向代理服务器
反向代理服务器将请求转发给后边的web服务器
web服务器 N 台 反向代理服务器转发请求会轮询进行 web服务器收到请求进行处理, 得到结果</description>
    </item>
    
    <item>
      <title>MySQL数据库API库</title>
      <link>https://okokfun.github.io/post/mysql%E6%95%B0%E6%8D%AE%E5%BA%93api%E5%BA%93/</link>
      <pubDate>Wed, 05 Jan 2022 20:21:29 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/mysql%E6%95%B0%E6%8D%AE%E5%BA%93api%E5%BA%93/</guid>
      <description>MySQL数据库API库 访问MySQL服务器，这需要使用mysqlclient库，MySQL的大多数客户端API（除Java和.NET）都是通过这个库来和MySQL服务器通讯的，而这个库正是使用C语言编写的。
可使用mysql -V 命令查看当前系统内所使用的mysql数据库版本信息。数据库版本为5.6.20版。因此，我们可从帮助手册refman-5.6-en.a4.pdf入手，了解学习MySQL C API使用的一般信息。
从API手册23.8中可获取信息，MySQL客户端使用 libmysqlclient 库内部的函数访问MySQL服务器。因此我们在编程过程中，如若使用到库内的函数，必须链接函数库，对应的要找到头文件所在目录位置、函数库路径。以便我们在使用gcc编译工具时可以填充参数-I、-L、-l。
从手册中可获知，函数库名为mysqlclient。
因此我们使用命令:
find / -name libmysqlclient* 查找该库的路径。得到 /usr/lib64/mysql/libmysqlclient.a。 nm /usr/lib64/mysql/libmysqlclient.a命令可查看库内包含的函数。
编写hello应用链接函数库 编写一个hello.c应用程序，链接使用该库。
用到头文件 &amp;lt;mysql.h&amp;gt; 可使用locate mysql.h查看其目录位置/usr/include/mysql/mysql.h。
编译引用了库的应用程序。
gcc hello.c -o hello -I/usr/include/mysql/ -L/usr/lib64/mysql/ -lmysqlclient 参见帮助手册refman-5.6-en.a4.pdf：23.8.4.3小节。
MySQL API常用函数 总体印象 使用MySQL库API函数的一般步骤：
a. 初始化. MYSQL *mysql_init(MYSQL *mysql);
b. 错误处理	unsigned int mysql_errno(MYSQL *mysql);char *mysql_error(MYSQL *mysql);
c. 建立连接.	MYSQL *mysql_real_connect(MYSQL *mysql, const char *host, const char *user, const char *passwd,const char *db, unsigned int port, const char *unix_socket, unsigned long client_flag);</description>
    </item>
    
    <item>
      <title>Mysql数据库</title>
      <link>https://okokfun.github.io/post/mysql%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Wed, 05 Jan 2022 12:57:29 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/mysql%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>1 MySQL基础知识 瑞典MySQL AB公司开发，由SUN收购，而后SUN被甲骨文并购，目前属于Oracle公司。
MySQL是一种关联数据库管理系统 由于其体积小、速度快、总体拥有成本低、MySQL软件采用了双授权政策，分为社区版和企业版。
1.1 MySQL版本及下载 MySQL数据库版本相对比较繁杂。常见的有：Community社区版、Enterprise企业版。
MySQL Community Server 版是开源免费的，这也是我们通常用的MySQL的版本。可以满足绝大多数用户需求。
MySQL Enterprise Edition 企业版收费的，官方指出提供30天免费试用期。可进一步划分为MySQL标准版、MySQL企业版、MySQL集群版。官方提供付费服务。
其中Community Server 可以直接从mysql 的官网下载。但Enterprice Edition只能从Oracle edelivery上下载，而Edelivery有时会屏蔽中国IP。
MySQL各版本区别参见：
http://www.admin10000.com/Document/62.html
下载mysql时注意区分版本细节及所应用的系统平台：linux(32/64) 、win(32/64)
举例：
win版本：
mysql-installer-community-8.0.26.0.msi版本
​ GA 是指软件的通用版本，一般指正式发布的版本 (Generally Available (GA) Release)
​ mysql-essential-5.1.60-win32.msi精简版，如果只需要mysql服务，就选择此版本。
​ mysql-5.1.60-win32.msi 是完 是整版，包含安装程序和配置向导，有MySQL文档。
mysql-noinstall-5.1.60-win32.zip 是非安装的zip压缩包，没有自动安装程序和配置向导，无安装向导
​ mysql-5.1.60.zip 是用于windows的Mysql源码压缩包
linux版本
​ 在http://www.mysql.com/downloads/网站上下载不了
​ 在 www.oracle.com/downloads 找mysql 注册用户, 选择操作系统平台和mysql版本 进行下载
官方文档上有关MySQL安装，介绍了3种类型及其对应安装方式来安装MySQL数据库：
Linux supports a number of different solutions for installing MySQL. The recommended method is to use one of the distributions from Oracle.</description>
    </item>
    
    <item>
      <title>算法</title>
      <link>https://okokfun.github.io/post/%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 01 Jan 2022 19:32:29 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/%E7%AE%97%E6%B3%95/</guid>
      <description>推荐看👉 OI Wiki
算法部分 位图(bitmap) 通过一个bit位来表示某个元素对应的值或者状态，其中的key就是对应元素本身，value对应0或1，我们知道8个bit可以组成一个Byte，所以bitmap本身会极大的节省储存空间。
位图BitMap
字典(map) 字典有什么特点呢?
字典的主要特点是一一对应的关系. 比如保存一个人的信息, 在合适的情况下取出这些信息. 使用数组的方式: [18, &amp;ldquo;Coderwhy&amp;rdquo;, 1.88]. 可以通过下标值取出信息. 使用字典的方式: {&amp;ldquo;age&amp;rdquo; : 18, &amp;ldquo;name&amp;rdquo; : &amp;ldquo;Coderwhy&amp;rdquo;, &amp;ldquo;height&amp;rdquo;: 1.88}. 可以通过key取出value 字典(map)的详细解释
kmp算法 kmp算法也就是字符串匹配算法。
比如： 在string str = &amp;ldquo;abcababcba&amp;quot;中匹配 string str2 = &amp;ldquo;ababc&amp;ldquo;字符串
最长公共前后缀：要匹配的字符串生成的数组
从一个字符开始到整个字符串，默认每行的公共前后缀最大值为全部字母数，然后判断是否符合其数字，如果不符合减一，一直判断到0结束。一行元素为1的数字为0，最后一行不统计
0	a
0	a	b
1	a	b	a
2	a	b	a	b
0	a	b	a	b	c
得出的公共前后缀为
0 0 1 2 0 然后整体向后移动一位，原最后一位被覆盖，下标为0的位置设为-1,最后的公共前后缀为
-1 0 0 1 2 kmp匹配过程</description>
    </item>
    
    <item>
      <title>从Portainer点击端口号进入容器服务方法</title>
      <link>https://okokfun.github.io/post/nas/%E4%BB%8Eportainer%E7%82%B9%E5%87%BB%E7%AB%AF%E5%8F%A3%E5%8F%B7%E8%BF%9B%E5%85%A5%E5%AE%B9%E5%99%A8%E6%9C%8D%E5%8A%A1%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 26 Dec 2021 13:43:29 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/nas/%E4%BB%8Eportainer%E7%82%B9%E5%87%BB%E7%AB%AF%E5%8F%A3%E5%8F%B7%E8%BF%9B%E5%85%A5%E5%AE%B9%E5%99%A8%E6%9C%8D%E5%8A%A1%E6%96%B9%E6%B3%95/</guid>
      <description>
1.点击home,再点击配置，然后填写nas的ip地址即可 </description>
    </item>
    
    <item>
      <title>OpenMediaVault中docker与工具portainer</title>
      <link>https://okokfun.github.io/post/nas/openmediavault%E4%B8%AD%E5%AE%89%E8%A3%85docker%E4%B8%8Egui%E5%B7%A5%E5%85%B7portainer/</link>
      <pubDate>Sun, 26 Dec 2021 13:42:29 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/nas/openmediavault%E4%B8%AD%E5%AE%89%E8%A3%85docker%E4%B8%8Egui%E5%B7%A5%E5%85%B7portainer/</guid>
      <description> 1. 安装完第三方插件后，再安装docker与portainer 2. 点击Opem Portainer创建管理账号 3. 然后创建一个容器网络 </description>
    </item>
    
    <item>
      <title>OpenMediaVault软件源修改</title>
      <link>https://okokfun.github.io/post/nas/openmediavault%E8%BD%AF%E4%BB%B6%E6%BA%90%E4%BF%AE%E6%94%B9/</link>
      <pubDate>Sun, 26 Dec 2021 13:42:29 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/nas/openmediavault%E8%BD%AF%E4%BB%B6%E6%BA%90%E4%BF%AE%E6%94%B9/</guid>
      <description>OpenMediaVault 国内软件源镜像服务器
清华大学镜像 https://mirrors.tuna.tsinghua.edu.cn/OpenMediaVault/ 北京外国语大学镜像 https://mirrors.bfsu.edu.cn/OpenMediaVault/ OMV 5
一、编辑 sources.list 1. 备份配置文件
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak 2. 清空配置文件
sudo sh -c &amp;#39;echo &amp;gt; /etc/apt/sources.list&amp;#39; 3. 编辑配置文件
sudo nano /etc/apt/sources.list 复制并粘贴以下内容：
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main deb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free 二、编辑 openmediavault-kernel-backports.list 1. 备份配置文件</description>
    </item>
    
    <item>
      <title>OpenMediaVault创建容器</title>
      <link>https://okokfun.github.io/post/nas/openmediavault%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Sun, 26 Dec 2021 13:41:29 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/nas/openmediavault%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8/</guid>
      <description>要创建的容器有：
Mariadb: 关系型数据库，mysql的开源版本Adminer：开源的数据库管理软件Gitea：开源的私人代码版本管理器Flarum：开源的论坛WordPress：开源的博客软件NextCloud：开源的私人网盘软件1.在一个分区上创建我们需要的文件夹存放配置文件 2.在终端拉取上面的各个镜像文件 1.flarum docker pull mondedie/flarum:latest2.wordpress docker pull wordpress3.adminer docker pull adminer4.mariadb docker pull mariadb5.gitea docker pull gitea/gitea6.nextcloud docker pull nextcloud3.创建各个容器 按顺序应该创建数据库软件与数据库管理软件 1.mariadb容器创建参考 container_name: mariadbenvironment:- PUID=1000- PGID=1000- MYSQL_ROOT_PASSWORD=1- TZ=Asia/Shanghaivolumes:- /srv/dev-disk-by-id-ata-VBOX_HARDDISK_VBdf1e9e6f-f90961e1-part1/mariadb/config:/configports:- 3306:3306networks:- mynetrestart: alwaysnetworks:mynet:external:name: mynet2.adminer创建参考 container_name: adminerenvironment:- ADMINER_DEFAULT_SERVER=mariadbports:- 8080:8080networks:- mynetrestart: alwaysnetworks:mynet:external:name: mynet3.</description>
    </item>
    
    <item>
      <title>OpenMediaVault安装与初步设置</title>
      <link>https://okokfun.github.io/post/nas/openmediavault%E5%AE%89%E8%A3%85%E4%B8%8E%E5%88%9D%E6%AD%A5%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Sun, 26 Dec 2021 13:39:29 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/nas/openmediavault%E5%AE%89%E8%A3%85%E4%B8%8E%E5%88%9D%E6%AD%A5%E8%AE%BE%E7%BD%AE/</guid>
      <description>OpenMediaVault（omv）是开源的nas系统，本博客尽量采用开源的代码和软件
1. 镜像下载 下载地址
https://sourceforge.net/projects/openmediavault/files/latest/download 2. 刻录或虚拟机安装 可以用etcher软件刻录镜像
安装 omv-extras 启用 OMV 5 社区插件支持 3. 安装依赖的工具 sudo apt --yes --no-install-recommends install dirmngr gnupg 4. 下载最新的omv-extras 安装包 地址：https://mirrors.tuna.tsinghua.edu.cn/OpenMediaVault/openmediavault-plugin-developers/pool/main/o/openmediavault-omvextrasorg/openmediavault-omvextrasorg_5.6.2_all.deb 下载命令：sudo wget https://mirrors.tuna.tsinghua.edu.cn/OpenMediaVault/openmediavault-plugin-developers/pool/main/o/openmediavault-omvextrasorg/openmediavault-omvextrasorg_5.6.2_all.deb 5. 安装 sudo dpkg -i openmediavault-omvextrasorg_5.6.2_all.deb 6. 安装完开启docker扩展源 7. Docker修改镜像源并在OMV 中的安装和使用 Docker 设置国内镜像服务器
第一步 创建 docker 配置文件目录 sudo mkdir /etc/docker 第二步 创建 daemon.json 配置文件 sudo touch /etc/docker/daemon.json 第三步 编辑配置文件 sudo nano /etc/docker/daemon.json 在编辑器中粘贴以下内容: { &amp;#34;registry-mirrors&amp;#34;: [ &amp;#34;https://hub-mirror.c.163.com&amp;#34;, &amp;#34;https://mirror.baidubce.com&amp;#34; ] } 第四步 重启 docker 服务 sudo systemctl daemon-reload sudo systemctl restart docker 检查设置是否生效</description>
    </item>
    
    <item>
      <title>OpenLib-c&#43;&#43;</title>
      <link>https://okokfun.github.io/post/openlib-c/</link>
      <pubDate>Sun, 26 Dec 2021 13:23:02 +0800</pubDate>
      
      <guid>https://okokfun.github.io/post/openlib-c/</guid>
      <description>开源 C++ 库列表 &amp;lt; cpp‎ | links
此页面的目的是构建开源 C++ 库的比较列表，使得人们在需要特定功能的实现时，不必浪费时间在网上（ DuckDuckGo 、谷歌、必应等）搜索。
若你知道可能对其他人有用的库，请在此添加到它的链接。能包含进来的库没有限制，但是必须能便捷地下载库的源码。
以“原态”提供此页面——希望这有用，但不提供任何担保。过时、误导或错误的链接可能出现于此。若你注意到这些错误，则改正它会很有意义。
包管理器 Package manager Description build2 一个开源的 (MIT)、跨平台的构建工具链，旨在为开发和打包 C/C++ 项目时提供如 Rust Cargo 一样的便利性。 cget Cmake 包检索工具，可用于下载并安装 Cmake 包。 cmodule 非侵入式 CMake 依赖管理。 conan 去中心化、开源 (MIT) 的 C/C++ 包管理器。 CPM.cmake 一段可以为 CMake 加入依赖管理功能的 CMake 脚本。它是作为 CMake 的 FetchContent 模块的一个简单包装构建的。该模块加入了版本控制、缓存、简单 API 等功能。 hunter 一个 CMake 驱动的跨平台包管理器，服务于 C/C++ 项目。 spack 一个超级计算机、Linux、macOS 平台的包管理器。它使得安装科学软件变得简单。非绑定于某一特定语言。 teaport 一个受 cocoapods 启发的依赖管理器。 vcpkg 一个 Windows、Linux、macOS 平台的 C++ 包管理器。 库 音频 库名 简述 协议 配置手段 Aquila Aquila 是一个开源、跨平台的 C++11 DSP 库。 MIT 许可 CMake Essentia 开源库，音频和音乐分析、描述和合成工具 (MIR) (源码) Affero GPLv3 FFTW 离散傅里叶变换 (DFT) 计算库 (SSE/SSE2/AVX/Altivec/ARM Neon)。 (源码) GPL-2.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://okokfun.github.io/post/%E4%BB%8E%E8%B4%A2%E6%94%BF%E6%94%AF%E5%87%BA%E6%95%B0%E6%8D%AE%E7%9C%8B%E4%B8%AD%E5%9B%BD%E6%94%BF%E5%BA%9C%E7%9A%84%E6%B2%BB%E5%9B%BD%E9%80%BB%E8%BE%91/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://okokfun.github.io/post/%E4%BB%8E%E8%B4%A2%E6%94%BF%E6%94%AF%E5%87%BA%E6%95%B0%E6%8D%AE%E7%9C%8B%E4%B8%AD%E5%9B%BD%E6%94%BF%E5%BA%9C%E7%9A%84%E6%B2%BB%E5%9B%BD%E9%80%BB%E8%BE%91/</guid>
      <description>看了前面那集 &amp;laquo;苛税猛如虎&amp;raquo; 的观众们, 毫无疑问都明白了一条: 中国政府, 是全世界最有钱的祝福, 它可以从全社会的总裁浮肿抽走近五成的资金 注意, 是净现金, 然后大手大脚的花出去, 没有丝毫的顾虑. 现在, 我们需要追问下一个问题: 财政的钱都花到哪里去了? 好吧, 财政支出主要分两个方向: 公共预算支出, 以及政府性基金支出 我们先来看政府性基金支出, 直接给结论, 这一块的指出严重不透明</description>
    </item>
    
    <item>
      <title></title>
      <link>https://okokfun.github.io/post/%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://okokfun.github.io/post/%E6%A0%87%E7%AD%BE/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
