<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Type - Tag - My Blog</title>
        <link>https://okokfun.github.io/tags/type/</link>
        <description>Type - Tag - My Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 28 Jan 2022 17:51:19 &#43;0000</lastBuildDate><atom:link href="https://okokfun.github.io/tags/type/" rel="self" type="application/rss+xml" /><item>
    <title>Ëé∑ÂèñC&#43;&#43;‰∏≠Êï∞ÊçÆÁöÑÁ±ªÂûãÁöÑÊñπÊ≥ï</title>
    <link>https://okokfun.github.io/posts/%E8%8E%B7%E5%8F%96c-%E4%B8%AD%E6%95%B0%E6%8D%AE%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%96%B9%E6%B3%95/</link>
    <pubDate>Fri, 28 Jan 2022 17:51:19 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://okokfun.github.io/posts/%E8%8E%B7%E5%8F%96c-%E4%B8%AD%E6%95%B0%E6%8D%AE%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[Ê≠§ÊñáÊù•Ëá™‰∫éüëâ C++ / typeinfo ‚Äî DevDocs ÔºåÂπ∂Êï¥ÁêÜ
Âà§Êñ≠Êï∞ÊçÆÊòØÂì™ÁßçÊï∞ÊçÆÁ±ªÂûã Â§¥Êñá‰ª∂&lt;typeinfo&gt;
std::type_info::name() ‰æãÂ≠êÔºö
#include &lt;iostream&gt; #include &lt;typeinfo&gt; struct Base { virtual ~Base() = default; }; struct Derived : Base {}; int main() { Base b1; Derived d1; const Base *pb = &amp;b1; std::cout &lt;&lt; typeid(*pb).name() &lt;&lt; &#39;\n&#39;; pb = &amp;d1; std::cout &lt;&lt; typeid(*pb).name() &lt;&lt; &#39;\n&#39;; int i; int * pi; std::cout &lt;&lt; &#34;int is: &#34; &lt;&lt; typeid(int).name() &lt;&lt; &#39;\n&#39;; std::cout &lt;&lt; &#34; i is: &#34; &lt;&lt; typeid(i).]]></description>
</item>
</channel>
</rss>
