<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>CMakeLists.txt - Tag - My Blog</title>
        <link>https://okokfun.github.io/tags/cmakelists.txt/</link>
        <description>CMakeLists.txt - Tag - My Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 03 Jan 2022 16:24:52 &#43;0000</lastBuildDate><atom:link href="https://okokfun.github.io/tags/cmakelists.txt/" rel="self" type="application/rss+xml" /><item>
    <title>Cmake的安装与CMakeLists.txt的编写</title>
    <link>https://okokfun.github.io/posts/cmake%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8Ecmakelists-txt%E7%9A%84%E7%BC%96%E5%86%99/</link>
    <pubDate>Mon, 03 Jan 2022 16:24:52 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://okokfun.github.io/posts/cmake%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8Ecmakelists-txt%E7%9A%84%E7%BC%96%E5%86%99/</guid>
    <description><![CDATA[安装 cmake是自动化项目编译工具，可以编译源代码、制作程序库、产生适配器（wrapper）、还可以用任意的顺序建构执行档。CMake 支持 in-place 建构（二进档和源代码在同一个目录树中）和 out-of-place 建构（二进档在别的目录里），因此可以很容易从同一个源代码目录树中建构出多个二进档。CMake 也支持静态与动态程式库的建构。
下载地址👉Download | CMake， 建议二进制安装。
win:
https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-windows-x86_64.zip ubuntu:
sudo apt install cmake wget https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-x86_64.tar.gz centos:
sudo yum install cmake arch:
sudo pacman -S cmake 编写CMakeLists.txt 单文件单目录CMakeLists.txt编写 # 指定cmake版本 cmake_minimum_required(VERSION 3.22) # 工程名 project(demo1) # 指定编译后文件名 set(OUTPUTNAME demo1) set(CMAKE_CXX_FLAGS &#34;${CMAKE_CXX_FLAGS} -Wall -g -O2 -std=c++20&#34;) # 指定编译参数 # 指定源文件夹 aux_source_directory(. DIR_SRCS) # 编译文件 add_executable(${OUTPUTNAME} ${DIR_SRCS}) 此文件加编写完毕后，创建一个build文件夹，cd进去，执行cmake ..，会生成Makefile文件，再然后执行make编译，最终生成项目文件。
多文件单目录CMakeLists.txt编写 和demo1相同
# 指定cmake版本 cmake_minimum_required(VERSION 3.22) # 工程名 project(demo2) # 指定编译后文件名 set(OUTPUTNAME demo2) set(CMAKE_CXX_FLAGS &#34;${CMAKE_CXX_FLAGS} -Wall -g -O2 -std=c++20&#34;) # 指定编译参数 # 指定源文件夹 aux_source_directory(.]]></description>
</item>
</channel>
</rss>
