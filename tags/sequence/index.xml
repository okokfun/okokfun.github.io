<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sequence on My Blog</title>
    <link>https://okokfun.github.io/tags/sequence/</link>
    <description>Recent content in Sequence on My Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 19 Jan 2022 16:52:52 +0000</lastBuildDate><atom:link href="https://okokfun.github.io/tags/sequence/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>顺序容器</title>
      <link>https://okokfun.github.io/post/c&#43;&#43;/%E9%A1%BA%E5%BA%8F%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Wed, 19 Jan 2022 16:52:52 +0000</pubDate>
      
      <guid>https://okokfun.github.io/post/c&#43;&#43;/%E9%A1%BA%E5%BA%8F%E5%AE%B9%E5%99%A8/</guid>
      <description>顺序容器实现能按顺序访问的数据结构。
std::array 静态的连续数组
定义于头文件 &amp;lt;array&amp;gt;
std::array 是封装 固定大小数组 的容器。 隐式定义的成员函数 (构造函数)(隐式声明) 遵循聚合初始化的规则初始化 array （注意默认初始化可以导致非类的 T 的不确定值） (公开成员函数) (析构函数)(隐式声明) 销毁 array 的每个元素 (公开成员函数) operator=(隐式声明) 以来自另一 array 的每个元素重写 array 的对应元素 (公开成员函数) 元素访问 at(C++11) 访问指定的元素，同时进行越界检查 (公开成员函数) [operator](C++11) 访问指定的元素 (公开成员函数) front(C++11) 访问第一个元素 (公开成员函数) back(C++11) 访问最后一个元素 (公开成员函数) data(C++11) 直接访问底层数组 (公开成员函数) 迭代器 begincbegin(C++11) 返回指向起始的迭代器 (公开成员函数) endcend(C++11) 返回指向末尾的迭代器 (公开成员函数) rbegincrbegin(C++11) 返回指向起始的逆向迭代器 (公开成员函数) rendcrend(C++11) 返回指向末尾的逆向迭代器 (公开成员函数) 容量 empty(C++11) 检查容器是否为空 (公开成员函数) size(C++11) 返回容纳的元素数 (公开成员函数) max_size(C++11) 返回可容纳的最大元素数 (公开成员函数) 操作 fill(C++11) 以指定值填充容器 (公开成员函数) swap(C++11) 交换内容 std::vector 定义于头文件 &amp;lt;vector&amp;gt;</description>
    </item>
    
  </channel>
</rss>
