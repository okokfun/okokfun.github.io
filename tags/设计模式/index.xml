<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>ËÆæËÆ°Ê®°Âºè - Tag - My Blog</title>
        <link>https://okokfun.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
        <description>ËÆæËÆ°Ê®°Âºè - Tag - My Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 31 Jan 2022 18:56:20 &#43;0000</lastBuildDate><atom:link href="https://okokfun.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" rel="self" type="application/rss+xml" /><item>
    <title>ËÆæËÆ°Ê®°ÂºèÂáÜÂàô</title>
    <link>https://okokfun.github.io/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%87%86%E5%88%99/</link>
    <pubDate>Mon, 31 Jan 2022 18:56:20 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://okokfun.github.io/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%87%86%E5%88%99/</guid>
    <description><![CDATA[ÊúÄÁªàÁõÆÁöÑÔºöÈ´òÂÜÖËÅöÔºå‰ΩéËÄ¶Âêà 1. ÂºÄÊîæÂ∞ÅÈó≠ÂéüÂàô (OCP,Open For Extension, Closed For Modification Principle) üòéÁ±ªÁöÑÊîπÂä®ÊòØÈÄöËøáÂ¢ûÂä†‰ª£Á†ÅËøõË°åÁöÑÔºåËÄå‰∏çÊòØ‰øÆÊîπÊ∫ê‰ª£Á†Å„ÄÇ
2. Âçï‰∏ÄËÅåË¥£ÂéüÂàô (SRP,Single Responsibility Principle) Á±ªÁöÑËÅåË¥£Ë¶ÅÂçï‰∏ÄÔºåÂØπÂ§ñÂè™Êèê‰æõ‰∏ÄÁßçÂäüËÉΩÔºåËÄåÂºïËµ∑Á±ªÂèòÂåñÁöÑÂéüÂõ†ÈÉΩÂ∫îËØ•Âè™Êúâ‰∏Ä‰∏™„ÄÇ
3. ‰æùËµñÂÄíÁΩÆÂéüÂàô (DIP,Dependence Inversion Principle) üòé‰æùËµñ‰∫éÊäΩË±°(Êé•Âè£),‰∏çË¶Å‰æùËµñÂÖ∑‰ΩìÁöÑÂÆûÁé∞(Á±ª)Ôºå‰πüÂ∞±ÊòØÈíàÂØπÊé•Âè£ÁºñÁ®ã„ÄÇ
4. Êé•Âè£ÈöîÁ¶ªÂéüÂàô (ISP,Interface Segegation Principle) ‰∏çÂ∫îËØ•Âº∫Ëø´ÂÆ¢Êà∑ÁöÑÁ®ãÂ∫è‰æùËµñ‰ªñ‰ª¨‰∏çÈúÄË¶ÅÁöÑÊé•Âè£ÊñπÊ≥ï„ÄÇ‰∏Ä‰∏™Êé•Âè£Â∫îËØ•Âè™Êèê‰æõ‰∏ÄÁßçÂØπÂ§ñÂäüËÉΩÔºå‰∏çÂ∫îËØ•ÊääÊâÄÊúâÊìç‰ΩúÈÉΩÂ∞ÅË£ÖÂà∞‰∏Ä‰∏™Êé•Âè£‰∏≠Âéª„ÄÇ
5. ÈáåÊ∞èÊõøÊç¢ÂéüÂàô (LSP, Liskov Substitution Principle) ‰ªª‰ΩïÊäΩË±°Á±ªÂá∫Áé∞ÁöÑÂú∞ÊñπÈÉΩÂèØ‰ª•Áî®‰ªñÁöÑÂÆûÁé∞Á±ªËøõË°åÊõøÊç¢„ÄÇÂÆûÈôÖÂ∞±ÊòØËôöÊãüÊú∫Âà∂ÔºåËØ≠Ë®ÄÁ∫ßÂà´ÂÆûÁé∞Èù¢ÂêëÂØπË±°ÂäüËÉΩ„ÄÇ
6. ‰ºòÂÖà‰ΩøÁî®ÁªÑÂêàËÄå‰∏çÊòØÁªßÊâøÂéüÂàô(CARP,Composite/Aggregate Reuse Principle) Â¶ÇÊûú‰ΩøÁî®ÁªßÊâøÔºå‰ºöÂØºËá¥Áà∂Á±ªÁöÑ‰ªª‰ΩïÂèòÊç¢ÈÉΩÂèØËÉΩÂΩ±ÂìçÂà∞Â≠êÁ±ªÁöÑË°å‰∏∫„ÄÇ Â¶ÇÊûú‰ΩøÁî®ÂØπË±°ÁªÑÂêàÔºåÂ∞±Èôç‰Ωé‰∫ÜËøôÁßç‰æùËµñÂÖ≥Á≥ª„ÄÇ
7. Ëø™Á±≥ÁâπÊ≥ïÂàô(LOD,Law of Demeter) üòé‰∏Ä‰∏™ÂØπË±°Â∫îÂΩìÂØπÂÖ∂‰ªñÂØπË±°Â∞ΩÂèØËÉΩÂ∞ëÁöÑ‰∫ÜËß£Ôºå‰ªéËÄåÈôç‰ΩéÂêÑ‰∏™ÂØπË±°‰πãÈó¥ÁöÑËÄ¶ÂêàÔºåÊèêÈ´òÁ≥ªÁªüÁöÑÂèØÁª¥Êä§ÊÄß„ÄÇ‰æãÂ¶ÇÂú®‰∏Ä‰∏™Á®ãÂ∫è‰∏≠ÔºåÂêÑ‰∏™Ê®°Âùó‰πãÈó¥Áõ∏‰∫íË∞ÉÁî®Êó∂ÔºåÈÄöÂ∏∏‰ºöÊèê‰æõ‰∏Ä‰∏™Áªü‰∏ÄÁöÑÊé•Âè£Êù•ÂÆûÁé∞„ÄÇËøôÊ†∑ÂÖ∂‰ªñÊ®°Âùó‰∏çÈúÄË¶Å‰∫ÜËß£Âè¶Â§ñ‰∏Ä‰∏™Ê®°ÂùóÁöÑÂÜÖÈÉ®ÂÆûÁé∞ÁªÜËäÇÔºåËøôÊ†∑ÂΩì‰∏Ä‰∏™Ê®°ÂùóÂÜÖÈÉ®ÁöÑÂÆûÁé∞ÂèëÁîüÊîπÂèòÊó∂Ôºå‰∏ç‰ºöÂΩ±ÂìçÂÖ∂‰ªñÊ®°ÂùóÁöÑ‰ΩøÁî®„ÄÇ(ÈªëÁõíÂéüÁêÜ)]]></description>
</item>
<item>
    <title>C&#43;&#43;ËÆæËÆ°Ê®°Âºè-Ë°å‰∏∫Ê®°Âºè</title>
    <link>https://okokfun.github.io/posts/c-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A1%8C%E4%B8%BA%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Mon, 03 Jan 2022 15:48:22 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://okokfun.github.io/posts/c-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A1%8C%E4%B8%BA%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[Êé®ËçêÁúãüëâÂ∏∏Áî®ËÆæËÆ°Ê®°ÂºèÊúâÂì™‰∫õÔºü (refactoringguru.cn)
ËßÇÂØüËÄÖÊ®°Âºè ËßÇÂØüËÄÖÊ®°ÂºèÊòØ‰∏ÄÁßçË°å‰∏∫ËÆæËÆ°Ê®°ÂºèÔºå ÂÖÅËÆ∏‰Ω†ÂÆö‰πâ‰∏ÄÁßçËÆ¢ÈòÖÊú∫Âà∂Ôºå ÂèØÂú®ÂØπË±°‰∫ã‰ª∂ÂèëÁîüÊó∂ÈÄöÁü•Â§ö‰∏™ ‚ÄúËßÇÂØü‚Äù ËØ•ÂØπË±°ÁöÑÂÖ∂‰ªñÂØπË±°„ÄÇ
ÈÄÇÁî®Âú∫ÊôØ:
ÂΩì‰∏Ä‰∏™ÂØπË±°Áä∂ÊÄÅÁöÑÊîπÂèòÈúÄË¶ÅÊîπÂèòÂÖ∂‰ªñÂØπË±°Ôºå ÊàñÂÆûÈôÖÂØπË±°ÊòØ‰∫ãÂÖàÊú™Áü•ÁöÑÊàñÂä®ÊÄÅÂèòÂåñÁöÑÊó∂Ôºå ÂèØ‰ΩøÁî®ËßÇÂØüËÄÖÊ®°Âºè„ÄÇ
ÂΩì‰Ω†‰ΩøÁî®ÂõæÂΩ¢Áî®Êà∑ÁïåÈù¢Á±ªÊó∂ÈÄöÂ∏∏‰ºöÈÅáÂà∞‰∏Ä‰∏™ÈóÆÈ¢ò„ÄÇ ÊØîÂ¶ÇÔºå ‰Ω†ÂàõÂª∫‰∫ÜËá™ÂÆö‰πâÊåâÈíÆÁ±ªÂπ∂ÂÖÅËÆ∏ÂÆ¢Êà∑Á´ØÂú®ÊåâÈíÆ‰∏≠Ê≥®ÂÖ•Ëá™ÂÆö‰πâ‰ª£Á†ÅÔºå ËøôÊ†∑ÂΩìÁî®Êà∑Êåâ‰∏ãÊåâÈíÆÊó∂Â∞±‰ºöËß¶ÂèëËøô‰∫õ‰ª£Á†Å„ÄÇ
ËßÇÂØüËÄÖÊ®°ÂºèÂÖÅËÆ∏‰ªª‰ΩïÂÆûÁé∞‰∫ÜËÆ¢ÈòÖËÄÖÊé•Âè£ÁöÑÂØπË±°ËÆ¢ÈòÖÂèëÂ∏ÉËÄÖÂØπË±°ÁöÑ‰∫ã‰ª∂ÈÄöÁü•„ÄÇ ‰Ω†ÂèØÂú®ÊåâÈíÆ‰∏≠Ê∑ªÂä†ËÆ¢ÈòÖÊú∫Âà∂Ôºå ÂÖÅËÆ∏ÂÆ¢Êà∑Á´ØÈÄöËøáËá™ÂÆö‰πâËÆ¢ÈòÖÁ±ªÊ≥®ÂÖ•Ëá™ÂÆö‰πâ‰ª£Á†Å„ÄÇ
ÂΩìÂ∫îÁî®‰∏≠ÁöÑ‰∏Ä‰∫õÂØπË±°ÂøÖÈ°ªËßÇÂØüÂÖ∂‰ªñÂØπË±°Êó∂Ôºå ÂèØ‰ΩøÁî®ËØ•Ê®°Âºè„ÄÇ ‰ΩÜ‰ªÖËÉΩÂú®ÊúâÈôêÊó∂Èó¥ÂÜÖÊàñÁâπÂÆöÊÉÖÂÜµ‰∏ã‰ΩøÁî®„ÄÇ
ËÆ¢ÈòÖÂàóË°®ÊòØÂä®ÊÄÅÁöÑÔºå Âõ†Ê≠§ËÆ¢ÈòÖËÄÖÂèØÈöèÊó∂Âä†ÂÖ•ÊàñÁ¶ªÂºÄËØ•ÂàóË°®„ÄÇ
/** * Observer Design Pattern * * Intent: Lets you define a subscription mechanism to notify multiple objects * about any events that happen to the object they&#39;re observing. * * Note that there&#39;s a lot of different terms with similar meaning associated * with this pattern.]]></description>
</item>
<item>
    <title>C&#43;&#43;ËÆæËÆ°Ê®°Âºè-ÁªìÊûÑÂûãÊ®°Âºè</title>
    <link>https://okokfun.github.io/posts/c-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Mon, 03 Jan 2022 15:07:58 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://okokfun.github.io/posts/c-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[Êé®ËçêÁúãüëâÂ∏∏Áî®ËÆæËÆ°Ê®°ÂºèÊúâÂì™‰∫õÔºü (refactoringguru.cn)
‰ª£ÁêÜÊ®°Âºè Ëß£Èáä
ÂØπÁúüÊ≠£Ë¶ÅË¢´ËÆøÈóÆÁöÑ‰∫ßÂìÅÊàñÁ±ªÂä†‰ª•ÊéßÂà∂ÔºåÂπ∂ÂèØ‰ª•ËøõË°å‰∏Ä‰∫õÊéßÂà∂ÔºåÊääËÆøÈóÆ‰∫ßÂìÅ‰∏é‰ª£ÁêÜËøõË°åÊò†Â∞ÑÔºåËÆøÈóÆ‰ª£ÁêÜÂ∞±Áõ∏ÂΩì‰∫éËÆøÈóÆ‰∫ßÂìÅ
ÈÄÇÁî®Âú∫ÊôØÔºö
‰ΩøÁî®‰ª£ÁêÜÊ®°ÂºèÁöÑÊñπÂºèÂ§öÁßçÂ§öÊ†∑Ôºå Êàë‰ª¨Êù•ÁúãÁúãÊúÄÂ∏∏ËßÅÁöÑÂá†Áßç„ÄÇ
Âª∂ËøüÂàùÂßãÂåñ ÔºàËôöÊãü‰ª£ÁêÜÔºâ„ÄÇ Â¶ÇÊûú‰Ω†Êúâ‰∏Ä‰∏™ÂÅ∂Â∞î‰ΩøÁî®ÁöÑÈáçÈáèÁ∫ßÊúçÂä°ÂØπË±°Ôºå ‰∏ÄÁõ¥‰øùÊåÅËØ•ÂØπË±°ËøêË°å‰ºöÊ∂àËÄóÁ≥ªÁªüËµÑÊ∫êÊó∂Ôºå ÂèØ‰ΩøÁî®‰ª£ÁêÜÊ®°Âºè„ÄÇ
‰Ω†Êó†ÈúÄÂú®Á®ãÂ∫èÂêØÂä®Êó∂Â∞±ÂàõÂª∫ËØ•ÂØπË±°Ôºå ÂèØÂ∞ÜÂØπË±°ÁöÑÂàùÂßãÂåñÂª∂ËøüÂà∞ÁúüÊ≠£ÊúâÈúÄË¶ÅÁöÑÊó∂ÂÄô„ÄÇ
ËÆøÈóÆÊéßÂà∂ Ôºà‰øùÊä§‰ª£ÁêÜÔºâ„ÄÇ Â¶ÇÊûú‰Ω†Âè™Â∏åÊúõÁâπÂÆöÂÆ¢Êà∑Á´Ø‰ΩøÁî®ÊúçÂä°ÂØπË±°Ôºå ËøôÈáåÁöÑÂØπË±°ÂèØ‰ª•ÊòØÊìç‰ΩúÁ≥ªÁªü‰∏≠ÈùûÂ∏∏ÈáçË¶ÅÁöÑÈÉ®ÂàÜÔºå ËÄåÂÆ¢Êà∑Á´ØÂàôÊòØÂêÑÁßçÂ∑≤ÂêØÂä®ÁöÑÁ®ãÂ∫è ÔºàÂåÖÊã¨ÊÅ∂ÊÑèÁ®ãÂ∫èÔºâÔºå Ê≠§Êó∂ÂèØ‰ΩøÁî®‰ª£ÁêÜÊ®°Âºè„ÄÇ
‰ª£ÁêÜÂèØ‰ªÖÂú®ÂÆ¢Êà∑Á´ØÂá≠ÊçÆÊª°Ë∂≥Ë¶ÅÊ±ÇÊó∂Â∞ÜËØ∑Ê±Ç‰º†ÈÄíÁªôÊúçÂä°ÂØπË±°„ÄÇ
Êú¨Âú∞ÊâßË°åËøúÁ®ãÊúçÂä° ÔºàËøúÁ®ã‰ª£ÁêÜÔºâ„ÄÇ ÈÄÇÁî®‰∫éÊúçÂä°ÂØπË±°‰Ωç‰∫éËøúÁ®ãÊúçÂä°Âô®‰∏äÁöÑÊÉÖÂΩ¢„ÄÇ
Âú®ËøôÁßçÊÉÖÂΩ¢‰∏≠Ôºå ‰ª£ÁêÜÈÄöËøáÁΩëÁªú‰º†ÈÄíÂÆ¢Êà∑Á´ØËØ∑Ê±ÇÔºå Ë¥üË¥£Â§ÑÁêÜÊâÄÊúâ‰∏éÁΩëÁªúÁõ∏ÂÖ≥ÁöÑÂ§çÊùÇÁªÜËäÇ„ÄÇ
ËÆ∞ÂΩïÊó•ÂøóËØ∑Ê±Ç ÔºàÊó•ÂøóËÆ∞ÂΩï‰ª£ÁêÜÔºâ„ÄÇ ÈÄÇÁî®‰∫éÂΩì‰Ω†ÈúÄË¶Å‰øùÂ≠òÂØπ‰∫éÊúçÂä°ÂØπË±°ÁöÑËØ∑Ê±ÇÂéÜÂè≤ËÆ∞ÂΩïÊó∂„ÄÇ ‰ª£ÁêÜÂèØ‰ª•Âú®ÂêëÊúçÂä°‰º†ÈÄíËØ∑Ê±ÇÂâçËøõË°åËÆ∞ÂΩï„ÄÇ
ÁºìÂ≠òËØ∑Ê±ÇÁªìÊûú ÔºàÁºìÂ≠ò‰ª£ÁêÜÔºâ„ÄÇ ÈÄÇÁî®‰∫éÈúÄË¶ÅÁºìÂ≠òÂÆ¢Êà∑ËØ∑Ê±ÇÁªìÊûúÂπ∂ÂØπÁºìÂ≠òÁîüÂëΩÂë®ÊúüËøõË°åÁÆ°ÁêÜÊó∂Ôºå ÁâπÂà´ÊòØÂΩìËøîÂõûÁªìÊûúÁöÑ‰ΩìÁßØÈùûÂ∏∏Â§ßÊó∂„ÄÇ
‰ª£ÁêÜÂèØÂØπÈáçÂ§çËØ∑Ê±ÇÊâÄÈúÄÁöÑÁõ∏ÂêåÁªìÊûúËøõË°åÁºìÂ≠òÔºå ËøòÂèØ‰ΩøÁî®ËØ∑Ê±ÇÂèÇÊï∞‰Ωú‰∏∫Á¥¢ÂºïÁºìÂ≠òÁöÑÈîÆÂÄº„ÄÇ
Êô∫ËÉΩÂºïÁî®„ÄÇ ÂèØÂú®Ê≤°ÊúâÂÆ¢Êà∑Á´Ø‰ΩøÁî®Êüê‰∏™ÈáçÈáèÁ∫ßÂØπË±°Êó∂Á´ãÂç≥ÈîÄÊØÅËØ•ÂØπË±°„ÄÇ
‰ª£ÁêÜ‰ºöÂ∞ÜÊâÄÊúâËé∑Âèñ‰∫ÜÊåáÂêëÊúçÂä°ÂØπË±°ÊàñÂÖ∂ÁªìÊûúÁöÑÂÆ¢Êà∑Á´ØËÆ∞ÂΩïÂú®Ê°à„ÄÇ ‰ª£ÁêÜ‰ºöÊó∂‰∏çÊó∂Âú∞ÈÅçÂéÜÂêÑ‰∏™ÂÆ¢Êà∑Á´ØÔºå Ê£ÄÊü•ÂÆÉ‰ª¨ÊòØÂê¶‰ªçÂú®ËøêË°å„ÄÇ Â¶ÇÊûúÁõ∏Â∫îÁöÑÂÆ¢Êà∑Á´ØÂàóË°®‰∏∫Á©∫Ôºå ‰ª£ÁêÜÂ∞±‰ºöÈîÄÊØÅËØ•ÊúçÂä°ÂØπË±°Ôºå ÈáäÊîæÂ∫ïÂ±ÇÁ≥ªÁªüËµÑÊ∫ê„ÄÇ
‰ª£ÁêÜËøòÂèØ‰ª•ËÆ∞ÂΩïÂÆ¢Êà∑Á´ØÊòØÂê¶‰øÆÊîπ‰∫ÜÊúçÂä°ÂØπË±°„ÄÇ ÂÖ∂‰ªñÂÆ¢Êà∑Á´ØËøòÂèØ‰ª•Â§çÁî®Êú™‰øÆÊîπÁöÑÂØπË±°„ÄÇ
class Subject { public: virtual void Request() const = 0; }; /** * The RealSubject contains some core business logic. Usually, RealSubjects are * capable of doing some useful work which may also be very slow or sensitive - * e.]]></description>
</item>
<item>
    <title>C&#43;&#43;ËÆæËÆ°Ê®°Âºè-ÂàõÂª∫ÂûãÊ®°Âºè</title>
    <link>https://okokfun.github.io/posts/c-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Mon, 27 Dec 2021 13:48:06 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://okokfun.github.io/posts/c-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[Êé®ËçêÁúãüëâÂ∏∏Áî®ËÆæËÆ°Ê®°ÂºèÊúâÂì™‰∫õÔºü (refactoringguru.cn)
ËÆæËÆ°Ê®°ÂºèÊèèËø∞Ôºö
Áî®ÁâπÂÆöÁöÑÂ•óË∑ØËß£ÂÜ≥Áé∞ÂÆûÈóÆÈ¢òÔºåÊØè‰∏Ä‰∏™ËÆæËÆ°Ê®°ÂºèÂØπÂ∫î‰∏Ä‰∏™Ê≥ïÂ≠ê
ÂàÜÁ±ª Ê†πÊçÆÊÑèÂõæÊàñÁõÆÁöÑÂàÜÁ±ª
ÂàõÂª∫ÂûãÊ®°Âºè: Êèê‰æõÂàõÂª∫ÂØπË±°Êú∫Âà∂ÔºåÂ¢ûÂä†Â∑≤ÊúâÁöÑ‰ª£Á†ÅÁÅµÊ¥ªÊÄßÂíåÂèØÂ§çÁî®ÊÄß ÁªìÊûÑÂûãÊ®°Âºè: ‰ªãÁªçÂ¶Ç‰ΩïÂ∞ÜÂØπË±°ÂíåÁ±ªÁªÑË£ÖÊàêËæÉÂ§ßÁöÑÁªìÊûÑÔºå Âπ∂ÂêåÊó∂‰øùÊåÅÁªìÊûÑÁöÑÁÅµÊ¥ªÂíåÈ´òÊïà„ÄÇ Ë°å‰∏∫Ê®°Âºè: Ë¥üË¥£ÂØπË±°Èó¥ÁöÑÈ´òÊïàÊ≤üÈÄöÂíåËÅåË¥£ÂßîÊ¥æ„ÄÇ ÂàõÂª∫ÂûãÊ®°Âºè simple_factory_pattern(ÁÆÄÂçïÂ∑•ÂéÇ) Factory Method(Â∑•ÂéÇÊñπÊ≥ï) Âú®Áà∂Á±ª‰∏≠Êèê‰æõ‰∏Ä‰∏™ÂàõÂª∫ÂØπË±°ÁöÑÊñπÊ≥ïÔºå ÂÖÅËÆ∏Â≠êÁ±ªÂÜ≥ÂÆöÂÆû‰æãÂåñÂØπË±°ÁöÑÁ±ªÂûã„ÄÇ
Ë¶ÅËß£ÂÜ≥ÁöÑÈóÆÈ¢òÔºö
ÂΩìÂ¢ûÂä†‰∏Ä‰∏™Êñ∞Á±ªÔºåÂíåÂÖ∂‰ªñÁ±ª‰ΩéËÄ¶Âêà
Ëß£ÂÜ≥ÊñπÊ°à:
Â¢ûÂä†‰∏Ä‰∏™Â≠êÁ±ªÁöÑÊäΩË±°Á±ªÔºåÊâÄÊúâÁöÑÂ≠êÁ±ªÁªßÊâø‰∫éÊäΩË±°Á±ªÔºåÂπ∂‰∏îÂÜôÁà∂Á±ªÁöÑÂÆûÁé∞
#include &lt;iostream&gt; class product { public: virtual ~product() {} }; class phone : public product { public: phone() { std::cout &lt;&lt; &#34;make phone&#34; &lt;&lt; std::endl; } }; class tv : public product { public: tv() { std::cout &lt;&lt; &#34;make tv&#34; &lt;&lt; std::endl; } }; class factory { public: virtual ~factory() {} virtual product* make_product() = 0; }; class phone_factory : public factory { public: virtual product* make_product() { return new phone(); } }; class tv_factory : public factory { public: virtual product* make_product() { return new tv(); } }; int main() { factory* factory1 = new phone_factory(); product* product1 = factory1-&gt;make_product(); factory* factory2 = new tv_factory(); product* product2 = factory2-&gt;make_product(); delete factory1; delete product1; delete factory2; delete product2; return 0; } Abstract Factory(ÊäΩË±°Â∑•ÂéÇÊ®°Âºè) ÈöèÁùÄ‰∏öÂä°ÁöÑÂèëÂ±ïÔºåÊõ¥Â§öÁöÑÁ±ªÈúÄË¶ÅÂàõÂª∫ÔºåÊØîÂ¶ÇÁæéÂõΩÂ∑•ÂéÇÔºåÊ¨ßÊ¥≤Â∑•ÂéÇÔºå‰∫öÊ¥≤Â∑•ÂéÇÔºåÂçóÁæéÂ∑•ÂéÇÔºåÊØè‰∏™Âú∞Âå∫Â∑•ÂéÇÂèàÈúÄË¶ÅÂàõÂª∫ÂêÑËá™ÁöÑ‰∫ßÂìÅ]]></description>
</item>
</channel>
</rss>
